; Aufbau der Tabelle:
; Mnemonic	Anzahl_verschiedene_Opcodes	Anzahl_Operanden	Class
;	{ op	type	oplen	cod	modrm	TTT }
MOV 0D 2 01	00B0 31 1 01 00 00	; MOV reg,imm
						00A0 24 1 03 00 00	; MOV acc,addr
						00A2 42 1 03 00 00	; MOV addr,acc
						00C6 61 1 03 02 00	; MOV reg/mem,imm
						0088 66 1 04 01 00	; MOV mem/reg,mem/reg
						008E 56 1 00 03 00	; MOV segreg,mem/reg
						008C 65 1 00 03 00	; MOV mem/reg,segreg
						0F22 A3 2 00 00 00	; MOV CRx, reg
						0F20 3A 2 00 00 00	; MOV reg, CRx
						0F23 B3 2 00 00 00	; MOV DRx, reg
						0F21 3B 2 00 00 00	; MOV reg, DRx
						0F26 D3 2 00 00 00	; MOV TRx, reg
						0F24 3D 2 00 00 00	; MOV reg, TRx
ADD 02 2 02	0080 61 1 06 02 00	; ADD mem/reg, imm
						0000 66 1 04 01 00	; ADD mem/reg, mem/reg
ADC 02 2 02	0080 61 1 06 02 02	; ADC mem/reg, imm
						0010 66 1 04 01 00	; ADC mem/reg, mem/reg
SUB 02 2 02	0080 61 1 06 02 05	; SUB mem/reg, imm
						0028 66 1 04 01 00	; SUB mem/reg, mem/reg
SBB 02 2 02	0080 61 1 06 02 03	; SBB mem/reg, imm
						0018 66 1 04 01 00	; SBB mem/reg, mem/reg
CMP 02 2 02	0080 61 1 06 02 07	; CMP mem/reg, imm
						0038 66 1 04 01 00	; CMP mem/reg, mem/reg
AND 02 2 02	0080 61 1 06 02 04	; ADD mem/reg, imm
						0020 66 1 04 01 00	; ADD mem/reg, mem/reg
OR 02 2 02	0080 61 1 06 02 01	; OR mem/reg, imm
					  0008 66 1 04 01 00	; OR mem/reg, mem/reg
XOR 02 2 02	0080 61 1 06 02 06	; XOR mem/reg, imm
						0030 66 1 04 01 00	; XOR mem/reg, mem/reg
MOVSX 01 2 03	0FBE 36 2 03 01 00	; MOVSX reg, mem/reg
MOVZX 01 2 03	0FB6 36 2 03 01 00	; MOVZX reg, mem/reg
XCHG 02 2 04	0090 23 1 02 00 00	; XCHG (E)AX, reg
						  0086 63 1 03 01 00	; XCHG mem/reg, reg
IN 02 2 05	00E4 21 1 03 00 00	; IN acc, imm8
					00EC 29 1 03 00 00	; IN acc, (E)DX
OUT 02 2 06	00E6 21 1 03 00 00	; OUT imm8, acc
						00EE 29 1 03 00 00	; OUT (E)DX, acc
LEA 01 2 07	008D 36 1 00 01 00	; LEA reg, mem
LDS 01 2 0B	00C5 36 1 00 01 00	; LDS reg, mem
LES 01 2 0B	00C4 36 1 00 01 00
LFS 01 2 0B	0FB4 36 2 00 01 00
LGS 01 2 0B	0FB5 36 2 00 01 00
LSS 01 2 0B	0FB2 36 2 00 01 00
TEST 03 2 08	00A8 21 1 03 00 00	; TEST acc, imm
						00F6 61 1 03 02 00	; TEST mem/reg, imm
						0084 63 1 03 01 00	; TEST mem/reg, reg
RCL 03 2 0A	00D0 6C 1 03 02 02	; RCL mem/reg, 1
						00D2 68 1 03 02 02	; RCL mem/reg, CL
						00C0 61 1 03 02 02	; RCL mem/reg, imm
RCR 03 2 0A	00D0 6C 1 03 02 03
						00D2 68 1 03 02 03
						00C0 61 1 03 02 03
ROL 03 2 0A	00D0 6C 1 03 02 00
						00D2 68 1 03 02 00
						00C0 61 1 03 02 00
ROR 03 2 0A	00D0 6C 1 03 02 01
						00D2 68 1 03 02 01
						00C0 61 1 03 02 01
SAL 03 2 0A	00D0 6C 1 03 02 04
						00D2 68 1 03 02 04
						00C0 61 1 03 02 04
SAR 03 2 0A	00D0 6C 1 03 02 07
						00D2 68 1 03 02 07
						00C0 61 1 03 02 07
SHL 03 2 0A	00D0 6C 1 03 02 04
						00D2 68 1 03 02 04
						00C0 61 1 03 02 04
SHR 03 2 0A	 00D0 6C 1 03 02 05
						00D2 68 1 03 02 05
						00C0 61 1 03 02 05
BT 02 2 0C	0FBA 61 2 00 02 04	; BT mem/reg, imm8
					 0FA3 63 2 00 01 00	; BT mem/reg, reg
BTC 02 2 0C	0FBA 61 2 00 02 07
					   0FBB 63 2 00 01 00
BTR 02 2 0C	0FBA 61 2 00 02 06
					   0FB3 63 2 00 01 00
BTS 02 2 0C	0FB3 61 2 00 02 05
					   0FAB 63 2 00 01 00
ENTER 01 2 0D	00C8 11 1 00 00 00	; ENTER disp, level
BSF 01 2 0E	0FBC 36 2 00 01 00	; BSF reg, mem/reg
BSR 01 2 0E	0FBD 36 2 00 01 00	; BSR reg, mem/reg
BOUND 01 2 0F	0062 36 1 00 01 00	; BOUND reg, mem
SHLD 02 3 1E	0FA4 61 2 00 01 00	; SHLD mem/reg, reg, imm8
						  0FA5 68 2 00 01 00	; SHLD mem/reg, reg, CL
SHRD 02 3 1E	0FAC 61 2 00 01 00	; SHRD mem/reg, reg, imm8
						  0FAD 68 2 00 01 00	; SHRD mem/reg, reg, CL
IMUL 01 1 1F	00F6 60 1 03 02 05	; IMUL mem/reg. Die anderen Faelle werden im Code behandelt!
PUSH 05 1 20	0050 03 1 02 00 00	; PUSH reg
						 0006 05 1 05 00 00	; PUSH sreg2
						 0F80 07 2 08 00 00	; PUSH sreg3
						 00FF 06 1 00 02 06	; PUSH mem/reg
						 0068 01 1 07 00 00	; PUSH imm
POP 04 1 21	0058 03 1 02 00 00	; POP reg
						0007 05 1 05 00 00	; POP sreg2
						0F81 07 2 08 00 00	; POP sreg3
						008F 06 1 00 02 00	; POP mem/reg
INC 02 1 23	0040 30 1 02 00 00	; INC reg
					  00FE 60 1 03 02 00	; INC mem/reg
DEC 02 1 23	0048 30 1 02 00 00	; DEC reg
						00FE 60 1 03 02 01	; DEC mem/reg
NOT 01 1 24	00F6 60 1 03 02 02	; NOT mem/reg
NEG 01 1 24	00F6 60 1 03 02 03	; NEG mem/reg
MUL 01 1 25	00F6 60 1 03 02 04	; MUL mem/reg
DIV 01 1 25	00F6 60 1 03 02 06	; DIV mem/reg
IDIV 01 1 25	00F6 60 1 03 02 07	; IDIV mem/reg
CALL 02 1 27	00E8 01 1 00 00 00	; CALL disp
						00FF 06 1 00 02 02	; CALL mem/reg
JMP 02 1 28	00EB 01 1 00 00 E9	; JMP disp
					   00FF 06 1 00 02 04	; JMP mem/reg
JO 01 1 29	0070 01 1 00 00 80	; JO	opcode=kurzer Sprung, 0F op+10H = langer Sprung
JNO 01 1 29	0071 01 1 00 00 81	; JNO
JB 01 1 29	0072 01 1 00 00 82	; JB
JNAE 01 1 29	0072 01 1 00 00 82	; JNAE (= JB)
JNB 01 1 29	0073 01 1 00 00 83	; JNB
JAE 01 1 29	0073 01 1 00 00 83	; JAE (= JNB)
JE 01 1 29	0074 01 1 00 00 84	; JE
JZ 01 1 29	0074 01 1 00 00 84	; JZ (= JE)
JNE 01 1 29	0075 01 1 00 00 85	; JNE
JNZ 01 1 29	0075 01 1 00 00 85	; JNZ (= JNE)
JBE 01 1 29	0076 01 1 00 00 86	; JBE
JNA 01 1 29	0076 01 1 00 00 86	; JNE (= JBE)
JNBE 01 1 29	0077 01 1 00 00 87	; JNBE
JA 01 1 29	0077 01 1 00 00 87	; JA (= JNBE)
JS 01 1 29	0078 01 1 00 00 88	; JS
JNS 01 1 29	0079 01 1 00 00 89	; JNS
JPE 01 1 29	007A 01 1 00 00 8A	; JPE (statt nur JP)
JPO 01 1 29	007B 01 1 00 00 8B	; JPO (statt nur JNP)
JL 01 1 29	007C 01 1 00 00 8C	; JL
JNGE 01 1 29	007C 01 1 00 00 8C	; JNGE (= JL)
JNL 01 1 29	007D 01 1 00 00 8D	; JNL
JGE 01 1 29	007D 01 1 00 00 8D	; JBE (= JNL)
JLE 01 1 29	007E 01 1 00 00 8E	; JLE
JNG 01 1 29	007E 01 1 00 00 8E	; JNG (= JLE)
JNLE 01 1 29	007F 01 1 00 00 8F	; JNLE
JG 01 1 29	007F 01 1 00 00 8F	; JG (= JNLE)
JCXZ 01 1 2A	66E3 01 2 00 00 00	; JCXZ disp8
JECXZ 01 1 2A	00E3 01 1 00 00 00	; JECXZ disp8
LOOP 01 1 2A	00E2 01 1 00 00 00	; LOOP disp8
LOOPE 01 1 2A	00E1 01 1 00 00 00	; LOOPE disp8
LOOPZ 01 1 2A	00E1 01 1 00 00 00
LOOPNE 01 1 2A	00E0 01 1 00 00 00	; LOOPNE disp8
LOOPNZ 01 1 2A	00E0 01 1 00 00 00
SETO 01 1 2B	0F90 60 2 00 02 00
SETNO 01 1 2B	0F91 60 2 00 02 00
SETB 01 1 2B	0F92 60 2 00 02 00
SETNAE 01 1 2B	0F92 60 2 00 02 00
SETNB 01 1 2B	0F93 60 2 00 02 00
SETAE 01 1 2B	0F93 60 2 00 02 00
SETE 01 1 2B	0F94 60 2 00 02 00
SETZ 01 1 2B	0F94 60 2 00 02 00
SETNE 01 1 2B	0F95 60 2 00 02 00
SETNZ 01 1 2B	0F95 60 2 00 02 00
SETBE 01 1 2B	0F96 60 2 00 02 00
SETNA 01 1 2B	0F96 60 2 00 02 00
SETNBE 01 1 2B	0F97 60 2 00 02 00
SETA 01 1 2B	0F97 60 2 00 02 00
SETS 01 1 2B	0F98 60 2 00 02 00
SETNS 01 1 2B	0F99 60 2 00 02 00
SETPE 01 1 2B	0F9A 60 2 00 02 00
SETPO 01 1 2B	0F9B 60 2 00 02 00
SETL 01 1 2B	0F9C 60 2 00 02 00
SETNGE 01 1 2B	0F9C 60 2 00 02 00
SETNL 01 1 2B	0F9D 60 2 00 02 00
SETGE 01 1 2B	0F9D 60 2 00 02 00
SETLE 01 1 2B	0F9E 60 2 00 02 00
SETNG 01 1 2B	0F9E 60 2 00 02 00
SETNLE 01 1 2B	0F9F 60 2 00 02 00
SETG 01 1 2B	0F9F 60 2 00 02 00
INT 01 1 2C	00CD 10 1 00 00 00
RET 01 1 2D	00C3 01 1 00 00 00	; RET (RET disp wird im Code behandelt!)
RETF 01 1 2E	00CB 01 1 00 00 00	; RETF (RETF disp wird im Code behandelt!)
REP 01 0 3D	00F2 00 1 00 00 00	; changed 01 1 -> 01 0 
REPE 01 0 3D	00F3 00 1 00 00 00	; changed 01 1 -> 01 0
REPNE 01 0 3D	00F2 00 1 00 00 00	; changed 01 1 -> 01 0
AAA 01 0 3F	0037 00 1 00 00 00
AAD 01 0 3F	D50A 00 2 00 00 00
AAM 01 0 3F	D40A 00 2 00 00 00
AAS 01 0 3F	003F 00 1 00 00 00
CBW 01 0 3F	0098 00 1 00 00 00
CLC 01 0 3F	00F8 00 1 00 00 00
CLD 01 0 3F	00FC 00 1 00 00 00
CLI 01 0 3F	00FA 00 1 00 00 00
CLTS 01 0 3F	0F06 00 2 00 00 00
CMC 01 0 3F	00F5 00 1 00 00 00
CMPSB 01 0 3E	00A6 00 1 00 00 00
CMPSW 01 0 3E	66A7 00 1 00 00 00
CMPSD 01 0 3E	00A7 00 1 00 00 00
CWD 01 0 3F	0099 00 1 00 00 00
DAA 01 0 3F	0027 00 1 00 00 00
DAS 01 0 3F	002F 00 1 00 00 00
HLT 01 0 3F	00F4 00 1 00 00 00
INSB 01 0 3E	006C 00 1 00 00 00
INSW 01 0 3E	666D 00 2 00 00 00
INSD 01 0 3E	006D 00 1 00 00 00
INTO 01 0 3F	00CE 00 1 00 00 00
IRET 01 0 3F	00CF 00 1 00 00 00
LAHF 01 0 3F	009F 00 1 00 00 00
LEAVE 01 0 3F	00C9 00 1 00 00 00
LODSB 01 0 3E	00AC 00 1 00 00 00
LODSW 01 0 3E	66AD 00 2 00 00 00
LODSD 01 0 3E	00AD 00 1 00 00 00
MOVSB 01 0 3E	00A4 00 1 00 00 00
MOVSW 01 0 3E	66A5 00 2 00 00 00
MOVSD 01 0 3E	00A5 00 1 00 00 00
NOP 01 0 3F	0090 00 1 00 00 00
OUTSB 01 0 3E	006E 00 1 00 00 00
OUTSW 01 0 3E	666F 00 2 00 00 00
OUTSD 01 0 3E	006F 00 1 00 00 00
POPA 01 0 3F	0061 00 1 00 00 00
POPF 01 0 3F	009D 00 1 00 00 00
PUSHA 01 0 3F	0060 00 1 00 00 00
PUSHF 01 0 3F	009C 00 1 00 00 00
SAHF 01 0 3F	009E 00 1 00 00 00
SCASB 01 0 3E	00AE 00 1 00 00 00
SCASW 01 0 3E	66AF 00 2 00 00 00
SCASD 01 0 3E	00AF 00 1 00 00 00
STC 01 0 3F	00F9 00 1 00 00 00
STD 01 0 3F	00FD 00 1 00 00 00
STI 01 0 3F	00FB 00 1 00 00 00
STOSB 01 0 3E	00AA 00 01 00 00 00
STOSW 01 0 3E	66AB 00 2 00 00 00
STOSD 01 0 3E	00AB 00 1 00 00 00
WAIT 01 0 3F	009B 00 1 00 00 00
XLAT 01 0 3F	00D7 00 1 00 00 00
SBLKB 01 4 40	0001 00 1 00 00 00	; SBLKB -> definiere lokale Variable
SBLKW 01 4 40	0002 00 1 00 00 00	; SBLKW
SBLKD 01 4 40	0004 00 1 00 00 00	; SBLKD
SBYTE 01 4 41	0001 00 1 00 00 00	; SBYTE -> definiere Variable
SWORD 01 4 41	0002 00 1 00 00 00	; SWORD
SDOUBLE 01 4 41	0004 00 1 00 00 00	; SDOUBLE
MODULE 01 1 42	0000 00 1 00 00 00	; MODULE
EQU 01 1 43	0000 00 1 00 00 00	; EQU
$ ; Ende der Tabelle; jetzt folgen noch die Register (08=8bit,.. 01=SegReg): ACHTUNG: Unbedingt alphabetisch geordnet!!!!!
AH 08 4
AL 08 0
AX 10 0
BH 08 7
BL 08 3
BP 10 5
BX 10 3
CH 08 5
CL 08 1
CR0 03 0
CR2 03 2
CR3 03 3
CS 01 1
CX 10 1
DH 08 6
DI 10 7
DL 08 2
DR0 04 0
DR1 04 1
DR2 04 2
DR3 04 3
DR6 04 6
DR7 04 7
DS 01 3
DX 10 2
EAX 20 0
EBP 20 5
EBX 20 3
ECX 20 1
EDI 20 7
EDX 20 2
ES 01 0
ESI 20 6
ESP 20 4
FS 01 4
GS 01 5
SI 10 6
SP 10 4
SS 01 2
TR6 05 6
TR7 05 7
& ; Jetzt folgen die Tabellen fuer die Codierung der Befehle
2 ; Anzahl der Tabellen
0000 0000 0000 0000 0000 0000 0000	; fuer MOV
0000 0000 0000 0000 0000 0000 0000
0000 0031 0166 0166 0024 0065 0166
0000 0031 0166 0166 0166 0065 0166
0000 0061 0042 0066 0000 0065 0000
0000 0000 0056 0056 0056 0000 0056
0000 0061 0066 0066 0000 0065 0000
0000 0000 0000 0000 0000 0000 0000	; fuer ADD, ADC, SUB, XOR, ...
0000 0000 0000 0000 0000 0000 0000
0000 0061 0166 0166 0166 0000 0166
0000 0061 0166 0166 0166 0000 0166
0000 0061 0066 0066 0000 0000 0000
0000 0000 0000 0000 0000 0000 0000
0000 0061 0066 0066 0000 0000 0000
*