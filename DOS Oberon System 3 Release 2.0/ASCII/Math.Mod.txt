MODULE Math;

(* Math.Functions of the 387 *)
(* ARD, 21. 9. 92 *)
(* ARD, 10. 6. 94 diff between sin and cos of 386 and 486??? --> 1.0 not on tos *)


IMPORT S := SYSTEM, DOS;

CONST e* =    2.7182818285;

VAR pi*: REAL;
		(* sqrt: *) c11, c12, c13, c14, c15: REAL;
		(* exp: *) c21, c22, c23, c24: REAL;
		(* ln: *) c41, c42, c43, c44, c45: REAL;
		(* sin, cos: *) c31, p31, p32, p33, p30, q31, q32, q33: REAL;
		(* atan: *) c51, s51, c52, s52, p50, q52, q51, q50: REAL;

PROCEDURE -Sin(x: REAL):REAL
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0FEH,				(* FSIN ST(0) *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE -Cos(x: REAL):REAL
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0FFH,				(* FCOS ST(0) *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE -Arctan(x: REAL):REAL
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0E8H,				(* FLD1 *)
	0D9H, 0F3H,				(* FPATAN ST(1)/ST(0) *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE -Sqrt(x: REAL):REAL
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0FAH,				(* FSQRT ST(0) *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE -Ln(x: REAL):REAL
	0D9H, 0E8H,				(* FLD1 *)
	0D9H, 0EAH, 				(* FLDL2E *)
	0DEH, 0F9H,				(* FDIVP ST(1)/ST(0) *)
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0F1H,				(* FYL2X *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE -Pi():REAL
	0D9H, 0EBH,				(* FLDPI *)
	0C2H, 0, 0;		(* RET 0 *)

PROCEDURE -Exp(x: REAL):REAL
	0D9H, 44H, 24H, 04H, 		(* FLD ST(0), 4[ESP] *)
	0D9H, 0EAH, 				(* FLDL2E *)
	0DEH, 0C9H, 				(* FMULP ST(1), ST(0) *)
	0D9H, 0C0H,				(* FLD ST(0) *)
	0D9H, 0FCH,				(* FRNDINT *)
	0D9H, 0C9H, 				(* FXCH ST(1), ST(0) *)
	0D8H, 0E1H,				(* FSUB ST(0), ST(1) *)
	0D9H, 0F0H, 				(* F2XM1 *)
	0D9H, 0E8H,				(* FLD1 *)
	0DEH, 0C1H, 				(* FADDP ST(1), ST(0) *)
	0D9H, 0FDH, 				(* FSCALE *)
	0DDH, 0D9H,				(* FSTP ST(1) *)
	0C2H, 4, 0;		(* RET 4 *)

PROCEDURE sin*(x: REAL): REAL;
VAR n: LONGINT; y, yy, f: REAL;
BEGIN 
	IF DOS.CoAvail THEN
		IF x < 0.0 THEN RETURN -Sin(-x) ELSE RETURN Sin(x) END 
	ELSE
		y := c31*x; n := ENTIER(y + 0.5);  (*c31 = 2/pi*)
		y := 2*(y-n); yy := y*y;
		IF ~ODD(n) THEN
			f := ((p33*yy + p32)*yy + p31) / (p30 + yy) * y
		ELSE
			f := ((q33*yy + q32)*yy + q31) / (q31 + yy)
		END ;
		IF ODD(n DIV 2) THEN f := -f END ;
		RETURN f
	END
END sin;

PROCEDURE cos*(x: REAL): REAL;
VAR n: LONGINT; y, yy, f: REAL;
BEGIN 
	IF DOS.CoAvail THEN
		IF x < 0.0 THEN RETURN Cos(-x) ELSE RETURN Cos(x) END 
	ELSE
		y := c31*x; n := ENTIER(y + 0.5);  (*c31 = 2/pi*)
		y := 2*(y-n); INC(n); yy := y*y;
		IF ~ODD(n) THEN
			f := ((p33*yy + p32)*yy + p31) / (p30 + yy) * y
		ELSE
			f := ((q33*yy + q32)*yy + q31) / (q31 + yy)
		END ;
		IF ODD(n DIV 2) THEN f := -f END ;
		RETURN f
	END
END cos;

PROCEDURE arctan*(x: REAL): REAL;
VAR y, yy, s: REAL;
BEGIN 
	IF DOS.CoAvail THEN
		RETURN Arctan(x)
	ELSE
		y := ABS(x); s := 0;
		IF y > c51 THEN y := -1/y; s := s51
		ELSIF y > c52 THEN y := (y-1)/(y+1); s := s52
		END ;
		yy := y*y;
		y := p50 * y/(yy + q52 + q51/(yy + q50)) + s;
		IF x < 0 THEN y := -y END ;
		RETURN y
	END
END arctan;

PROCEDURE sqrt*(x: REAL): REAL;
VAR e: LONGINT; a, s: REAL; Error: ARRAY 32 OF CHAR;
BEGIN 
	IF x <= 0 THEN
		IF x = 0 THEN RETURN 0 ELSE Error := "NEGATIVE ARGUMENT"; HALT(80) END
	ELSIF DOS.CoAvail THEN
		RETURN Sqrt(x)
	ELSE
		a := S.VAL(REAL, S.VAL(SET, x) - {23..30} + {24..29});	(* expo(a) = 126 *)
		e := S.LSH(S.VAL(LONGINT, x), -23) MOD 256 - 126;
		s := c11*a + c12 + c13/(c14 + a);
		s := (s + a/s)*0.5;
		IF ODD(e) THEN INC(e); s := c15*s END ;
		RETURN S.VAL(REAL, S.VAL(LONGINT, s) + S.LSH(e DIV 2, 23))
	END
END sqrt;

PROCEDURE ln*(x: REAL): REAL;
VAR e: LONGINT; a: REAL; Error: ARRAY 32 OF CHAR;
BEGIN 
	IF x <= 0 THEN Error := "NEGATIVE ARGUMENT"; HALT(80)
	ELSIF DOS.CoAvail THEN
		RETURN Ln(x)
	ELSE
		a := S.VAL(REAL, S.VAL(SET, x) - {23..30} + {24..29});	(* expo(a) = 126 *)
		e := S.LSH(S.VAL(LONGINT, x), -23) MOD 256 - 126;
		IF a < c41 THEN a := 2*a; DEC(e) END ;
		a := (a-1)/(a+1);
		a := c42*e + a*(c43 + c44/(c45 - a*a));
		RETURN a
	END
END ln;

PROCEDURE exp*(x: REAL): REAL;
VAR n: LONGINT; p, y, yy: REAL; Error: ARRAY 32 OF CHAR;
BEGIN 
	IF DOS.CoAvail THEN
		RETURN Exp(x)
	ELSE
		y := c21*x;  (*1/ln(2)*)
		n := ENTIER(y + 0.5); y := y-n;
		IF y >= 0 THEN INC(n) END ;
		IF n < -128 THEN RETURN 0
		ELSIF n > 127 THEN Error := "ARGUMENT TOO LARGE"; HALT(81)
		ELSE yy := y*y;
			p := (c22 + c23*yy)*y;
			p := p/(c24 + yy - p) + 0.5;
			IF y < 0 THEN p := 2*p END;
			RETURN S.VAL(REAL, S.VAL(LONGINT, p) + S.LSH(n, 23))
		END
	END
END exp;

BEGIN 
	IF DOS.CoAvail THEN pi := Pi() ELSE pi := S.VAL(REAL, 40490FD9H) (*3.1415926535*) END;
	c11 := S.VAL(REAL, 03EAFBA81H);
	c12 := S.VAL(REAL, 03F665222H);
	c13 := S.VAL(REAL, 0BEBA6391H);
	c14 := S.VAL(REAL, 03F00000EH);
	c15 := S.VAL(REAL, 03F3504F3H);	(* 1/sqrt(2) *)
	c21 := S.VAL(REAL, 03FB8AA3BH);	(* 1/ln(2) *)
	c22 := S.VAL(REAL, 040E6E1ACH);
	c23 := S.VAL(REAL, 03D6C5665H);
	c24 := S.VAL(REAL, 041A68BBBH);
	c41 := S.VAL(REAL, 03F3504F3H);	(* 1/sqrt(2) *)
	c42 := S.VAL(REAL, 03F317218H);	(* ln(2) *)
	c43 := S.VAL(REAL, 03F654226H);
	c44 := S.VAL(REAL, 03FEA3856H);
	c45 := S.VAL(REAL, 03FD4114DH);
	c31 := S.VAL(REAL, 03F22F983H);	(* 2/pi *)
	p31 := S.VAL(REAL, 04253463FH);
	p32 := S.VAL(REAL, 0C094A235H);
	p33 := S.VAL(REAL, 03DB1AC59H);
	p30 := S.VAL(REAL, 042868060H);
	q31 := S.VAL(REAL, 0423EBFC9H);
	q32 := S.VAL(REAL, 0C15B53F8H);
	q33 := S.VAL(REAL, 03EE548F8H);
	c51 := S.VAL(REAL, 0401A827AH);	(* 1 + sqrt(2) *)
	s51 := S.VAL(REAL, 03FC90FDBH);	(* pi/2 *)
	c52 := S.VAL(REAL, 03ED413CDH);	(* sqrt(2) - 1 *)
	s52 := S.VAL(REAL, 03F490FDBH);	(* pi/4 *)
	p50 := S.VAL(REAL, 040CBD065H);
	q52 := S.VAL(REAL, 041099F6AH);
	q51 := S.VAL(REAL, 0C08DFBCBH);
	q50 := S.VAL(REAL, 03FFE6CB2H)
END Math.